name: CI

on: 
  # Run the jobs on either push or a pull_request, but not both.
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - compiler: gcc
            config: cmake
          - compiler: clang
            config: cmake
          - compiler: clang
            config: asan
          - compiler: clang
            config: tsan
          - compiler: clang
            config: format
          - compiler: clang
            config: scan-build

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Configure Build & Test
      shell: bash
      env:
        CC: ${{ matrix.compiler }}
      run: ./travis.sh ${{ matrix.config }}

  build-macox:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    
    - name: Configure Build & Test
      shell: bash
      run: ./travis.sh macos

  build-win32:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}\.choco-cache
        key: choco-cache-${{ runner.os }}-${{ hashFiles('.github/workflows/ci.yml') }}
        restore-keys: |
          choco-cache-${{ runner.os }}-${{ hashFiles('.github/workflows/ci.yml') }}
          choco-cache-${{ runner.os }}-

    - name: Install Prerequisites
      run: |
        New-Item -ItemType Directory -Force -Path ${{ github.workspace }}\.choco-cache
        choco config set configLocation ${{ github.workspace }}\.choco-cache
        choco install --no-progress openssl
        Get-ChildItem -Path ${{ github.workspace }}\.choco-cache
        
    - name: Configure Build & Test
      shell: bash
      run: |
        cmake -E make_directory build/
        cmake -S . -B build/
        cmake --build build/ --config Debug --target INSTALL
        ctest -V ./build/
